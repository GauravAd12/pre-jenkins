pipeline {
    agent {
        label 'ubuntuslave'
    }

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-credentials')
        DOCKER_IMAGE_NAME = 'adhikarygaurav99/techaxis-webapp'
        DOCKER_IMAGE_TAG = 'latest'
    }

    stages {
        stage('Build Application') {
            steps {
                sh 'mvn -f jenkins/java-tomcat-sample/pom.xml clean package'
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/*.war'
                }
            }
        }

        stage('Create Tomcat Image') {
            agent {
                label 'testnode'
            }
            steps {
                copyArtifacts filter: '**/*.war', fingerprintArtifacts: true, projectName: env.JOB_NAME, selector: specific(env.BUILD_NUMBER)
                sh '''
                cd jenkins/java-tomcat-sample
                docker build -t ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} .
                '''
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh "echo ${DOCKER_PASS} | docker login -u ${DOCKER_USER} --password-stdin"
                }
                sh "docker push ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
            }
        }

        stage('Deploy to Staging Environment') {
            agent {
                label 'testnode'
            }
            steps {
                sh '''
                docker stop tomcatInstanceStaging || true
                docker rm tomcatInstanceStaging || true
                docker run -itd --name tomcatInstanceStaging -p 8082:8080 ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
                '''
            }
        }

        stage('Deploy to Production Environment') {
            agent {
                label 'testnode'
            }
            steps {
                timeout(time: 1, unit: 'DAYS') {
                    input message: 'Approve PRODUCTION Deployment?'
                }
                sh '''
                docker stop tomcatInstanceProd || true
                docker rm tomcatInstanceProd || true
                docker run -itd --name tomcatInstanceProd -p 8083:8080 ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
                '''
            }
        }
    }

    post { 
        always { 
            mail to: 'adhikarygaurav99@gmail.com',
            subject: "Job '${JOB_NAME}' (${BUILD_NUMBER}) is waiting for input",
            body: "Please go to ${BUILD_URL} and verify the build"
        }
        success {
            mail to: 'adhikarygaurav99@gmail.com', 
            subject: "Build Success: ${JOB_NAME} (${BUILD_NUMBER})",
            body: """Hi Team,

Build #$BUILD_NUMBER is successful. Please review the build at ${BUILD_URL}.

Regards,
DevOps Team
"""
        }
        failure {
            mail to: 'adhikarygaurav99@gmail.com',
            subject: "Build Failed: ${JOB_NAME} (${BUILD_NUMBER})",
            body: "The build failed. Please check the logs at ${BUILD_URL}."
        }
    }
}
